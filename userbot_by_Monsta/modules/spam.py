# modulesspam.py

import asyncio
from telethon import events

def register(client)
    @client.on(events.NewMessage(pattern=r'.spam (d+) (d+) (.+)'))
    async def spam(event)
        try
            args = event.pattern_match.groups()
            count = int(args[0])          # —Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
            delay = int(args[1])           # –ø–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–æ–π (—Å–µ–∫—É–Ω–¥—ã)
            message = args[2]              # —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

            await event.reply(füöÄ –ù–∞—á–∏–Ω–∞—é —Å–ø–∞–º {count} —Å–æ–æ–±—â–µ–Ω–∏–π, –∏–Ω—Ç–µ—Ä–≤–∞–ª {delay} —Å–µ–∫.)

            for _ in range(count)
                await event.respond(message)
                await asyncio.sleep(delay)

            await event.respond(‚úÖ –°–ø–∞–º –∑–∞–≤–µ—Ä—à—ë–Ω!)

        except Exception as e
            await event.reply(f‚ùå –û—à–∏–±–∫–∞ {str(e)})
